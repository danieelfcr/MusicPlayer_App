
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author danie
 */
public class CreatePlaylist extends javax.swing.JFrame {

    /**
     * Creates new form CreatePlaylist
     */
    public CreatePlaylist() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFName = new javax.swing.JTextField();
        JBCreate = new javax.swing.JButton();
        JBBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 0, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 27)); // NOI18N
        jLabel1.setText("Create your own playlist!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel1)
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 930, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 27)); // NOI18N
        jLabel2.setText("Your new playlistÂ´s name:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, -1, -1));

        jTFName.setFont(new java.awt.Font("Century Gothic", 0, 27)); // NOI18N
        jTFName.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 204)));
        jPanel1.add(jTFName, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 330, 50));

        JBCreate.setFont(new java.awt.Font("Century Gothic", 0, 27)); // NOI18N
        JBCreate.setText("Create playlist");
        JBCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCreateActionPerformed(evt);
            }
        });
        jPanel1.add(JBCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, -1, -1));

        JBBack.setFont(new java.awt.Font("Century Gothic", 0, 27)); // NOI18N
        JBBack.setText("Back");
        JBBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBBackActionPerformed(evt);
            }
        });
        jPanel1.add(JBBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCreateActionPerformed
        String playlistsFilePath = "C:\\MEIA\\listas_canciones.txt";
        String binPlaylistsFilePath = "C:\\MEIA\\bitacora_listas_canciones.txt";
        String descPlaylistsFilePath = "C:\\MEIA\\desc_listas_canciones.txt";
        String descBinPlaylistsFilePath = "C:\\MEIA\\desc_bitacora_listas_canciones.txt";

        File playlistsFile = new File(playlistsFilePath);
        File binPlaylistsFile = new File(binPlaylistsFilePath);
        File descPlaylistsFile = new File(descPlaylistsFilePath);
        File descBinPlaylistsFile = new File(descBinPlaylistsFilePath);
        
        Sequential.createFiles(playlistsFile, descPlaylistsFile, binPlaylistsFile, descBinPlaylistsFile);
        
        if (!keyExists(playlistsFile, binPlaylistsFile, Data.getUser(), jTFName.getText(), 0, 1)) {
           if (!Sequential.isMaxReorg(binPlaylistsFile, descBinPlaylistsFile)) {
            addToBin(Data.getUser(), jTFName.getText(), Data.getUser(), Sequential.getDate(), binPlaylistsFile, descBinPlaylistsFile);
            }
            else
            {
                Sequential.Reorganization(playlistsFile, binPlaylistsFile, descPlaylistsFile, descBinPlaylistsFile, 4);
                addToBin(Data.getUser(), jTFName.getText(), Data.getUser(), Sequential.getDate(), binPlaylistsFile, descBinPlaylistsFile);
            }

            showMessageDialog(null, "Playlist creada exitosamente."); 
        }
        else
        {
            showMessageDialog(null, "Playlist ya ha sido creada anteriormente"); 
        }
    }//GEN-LAST:event_JBCreateActionPerformed

    private void JBBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBBackActionPerformed
        UserMusic myFrame = new UserMusic();
        myFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_JBBackActionPerformed

    public static void addToBin(String User, String playlistName, String transactionUser, String creationDate, File file, File desc)
    {
         try{
            String data = User + "|" + playlistName + "|" + transactionUser + "|" + creationDate + "|" + "1";
        
            FileWriter fw = new FileWriter(file, true);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.append(data+"\n");
            bw.close();
            
            Sequential.updateDesc(file, desc, AdminData.getUser(), 4);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static boolean keyExists(File master, File bin, String Key1, String Key2, int posKey1, int posKey2)
    {
         try
        {
            FileReader frMaster = new FileReader(master);
            BufferedReader brMaster = new BufferedReader(frMaster);
            
            FileReader frBin = new FileReader(bin);
            BufferedReader brBin = new BufferedReader(frBin);
            
            String linea = "";
            
            if (bin.exists()) {
                while(!"".equals(linea = brBin.readLine()) && linea != null)
                {
                    String arr [] = linea.split("\\|");
                    if (Key1.equals(arr[posKey1])) {
                        if (Key2.equals(arr[posKey2])) {
                            brMaster.close();
                            brBin.close();
                            return true;
                        }
                    }
                }
            }
            if (master.exists()) {
                while(!"".equals(linea = brMaster.readLine()) && linea != null)
                {
                    String arr [] = linea.split("\\|");
                    if (Key1.equals(arr[posKey1])) {
                        if (Key2.equals(arr[posKey2])) {
                            brMaster.close();
                            brBin.close();
                            return true;
                        }
                    }
                }
            }
            brMaster.close();
            brBin.close();
            return false;
                       
        } catch (IOException e)
        {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error");
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreatePlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreatePlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreatePlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreatePlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreatePlaylist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBBack;
    private javax.swing.JButton JBCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTFName;
    // End of variables declaration//GEN-END:variables
}
